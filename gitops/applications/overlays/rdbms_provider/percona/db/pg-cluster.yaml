apiVersion: pgv2.percona.com/v2
kind: PerconaPGCluster
metadata:
  name: ${ARGOCD_ENV_dbdeploy_name_prefix}
  namespace: ${ARGOCD_ENV_namespace}
spec:
  # Operator version
  crVersion: ${ARGOCD_ENV_pgdb_helm_version}
  # PostgreSQL Docker image to use
  image: percona/percona-postgresql-operator:2.4.0-ppg16.3-postgres
  # The major version of PostgreSQL to use.
  postgresVersion: 16
  port: 5432
  imagePullPolicy: Always
  openshift: false
  pause: false
  standby:
    enabled: false
  unmanaged: false

  # configuration options for PostgreSQL instances
  instances:
    - name: instance1
      replicas: ${ARGOCD_ENV_postgres_replicas}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    postgres-operator.crunchydata.com/data: postgres
                topologyKey: kubernetes.io/hostname
              weight: 1
      dataVolumeClaimSpec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: ${ARGOCD_ENV_postgres_storage_size}
  
  users:
    - databases:
        - ${ARGOCD_ENV_db_name}
      name: ${ARGOCD_ENV_db_username}
      options: SUPERUSER
      password:
        type: ASCII
      secretName: "${ARGOCD_ENV_db_secret}"

  #  configuration options for the regular Percona PostgreSQL backups
  backups:
    pgbackrest:
      image: percona/percona-postgresql-operator:2.4.0-ppg16.3-pgbackrest2.51-1
      configuration:
        - secret:
            name: "${ARGOCD_ENV_dbdeploy_name_prefix}-pgbackrest-secret"
      global:
        objectstore-path: /pgbackrest/${ARGOCD_ENV_dbdeploy_name_prefix}
        objectstore-retention-full: '7' # keep full backups for x days
        objectstore-retention-full-type: time #This is based on the total number of days you would like to keep a backup. Option 2 is count
      manual:
        options:
          - '--type=full'
        repoName: objectstore
      repoHost:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
              - podAffinityTerm:
                  labelSelector:
                    matchLabels:
                      postgres-operator.crunchydata.com/data: pgbackrest
                  topologyKey: kubernetes.io/hostname
                weight: 1
      repos:
        - name: objectstore
          s3:
            endpoint: "http://rook-ceph-rgw-ceph-objectstore.rook-ceph.svc.cluster.local"
            bucket: "${ARGOCD_ENV_dbdeploy_name_prefix}-backups"
            region: us-east-1
          schedules:
            full: "0 0 * * 6"
            differential: "0 1 * * 1-6"
            #incremental: "0 1 * * 1-6"
      restore:
        enabled: false
        repoName: objectstore
        #options:
        #  - '--set=20250129-134851F'
        #  - --type=time
        #  - --target="2025-01-30 15:12:11+03"
    trackLatestRestorableTime: true
  proxy:
    pgBouncer:
      replicas: 1
      image: percona/percona-postgresql-operator:2.4.0-ppg16.3-pgbouncer1.22.1
      port: 5432
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    postgres-operator.crunchydata.com/role: pgbouncer
                topologyKey: kubernetes.io/hostname
              weight: 1
      config:
        global:
          max_prepared_statements: '1'
          pool_mode: transaction
          query_wait_timeout: '600'
      exposeSuperusers: true