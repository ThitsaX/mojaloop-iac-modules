---
apiVersion: addons.cluster.x-k8s.io/v1alpha1
kind: HelmChartProxy
metadata:
  name: ${ARGOCD_ENV_dbdeploy_name_prefix}-percona-cluster-root-app
  namespace: ${ARGOCD_ENV_capi_cluster_namespace}
spec:
  clusterSelector:
    matchLabels:
      cluster.x-k8s.io/cluster-name: ${ARGOCD_ENV_capi_cluster_name}    
      argoCDChart: enabled
  repoURL: https://argoproj.github.io/argo-helm
  chartName: argocd-apps
  namespace: "argocd"
  options:
    waitForJobs: true
    wait: true
    timeout: 5m
    install:
      createNamespace: true
  valuesTemplate: |
    applications:
      ${ARGOCD_ENV_dbdeploy_name_prefix}-percona-cluster-deployer:
        namespace: argocd
        finalizers:
          - resources-finalizer.argocd.argoproj.io
        project: default
        syncPolicy:
          automated:
            prune: true
            selfHeal: true
          retry:
            limit: 60
            backoff:
              duration: 10s
              maxDuration: 1m0s
              factor: 2
          syncOptions:
            - CreateNamespace=true
            - PrunePropagationPolicy=foreground
            - PruneLast=true
        sources:
          - repoURL: ${ARGOCD_ENV_sc_argocd_repo_url}
            targetRevision: ${ARGOCD_ENV_sc_dbaas_gitrepo_tag}
            path: gitops/applications/overlays/rdbms_provider/${ARGOCD_ENV_sc_dbaas_rdbms_provider}/db
            plugin:
              name: envsubstappofapp
              env:
                - name: "cluster_name"
                  value: "${ARGOCD_ENV_cluster_name}"

                - name: "app_name"
                  value: "${ARGOCD_ENV_app_name}"

                - name: "namespace"
                  value: "${ARGOCD_ENV_namespace}"

                - name: "vault_k8s_admin_auth_path"
                  value: "${ARGOCD_ENV_vault_k8s_admin_auth_path}"

                - name: "vault_k8s_admin_role_name"
                  value: "${ARGOCD_ENV_vault_k8s_admin_role_name}"

                - name: "vault_namespace"
                  value: "${ARGOCD_ENV_vault_namespace}"

                - name: "postgres_replicas"
                  value: "${ARGOCD_ENV_postgres_replicas}"

                - name: "postgres_proxy_replicas"
                  value: "${ARGOCD_ENV_postgres_proxy_replicas}"

                - name: "postgres_storage_size"
                  value: "${ARGOCD_ENV_postgres_storage_size}"

                - name: "pgdb_helm_version"
                  value: "${ARGOCD_ENV_pgdb_helm_version"

                - name: "db_secret"
                  value: "${ARGOCD_ENV_db_secret}"

                - name: "db_name"
                  value: "${ARGOCD_ENV_db_name}"

                - name: "db_username"
                  value: "${ARGOCD_ENV_db_username}"

                - name: "dbdeploy_name_prefix"
                  value: "${ARGOCD_ENV_dbdeploy_name_prefix}"

                - name: "db_backup_retention_period"
                  value: "${ARGOCD_ENV_db_backup_retention_period}"

                - name: "db_preferred_backup_window"
                  value: "${ARGOCD_ENV_db_preferred_backup_window}"

                - name: "externalservice_name"
                  value: "${ARGOCD_ENV_externalservice_name}"

                - name: max_prepared_statements
                  value: "0"               
                

        destination:
          server: "https://kubernetes.default.svc"
          namespace: argocd
