#role is here since is specific to dns policy, this uses vault xplane provider for auth to create, similar to secretbackend CR
apiVersion: aws.vault.upbound.io/v1alpha1
kind: SecretBackendRole
metadata:
  name: cc-cloud-provider-dns-access

spec:
  providerConfigRef:
    name: vault-provider-config
  forProvider:
    backend: cc-aws
    credentialType: iam_user
    # name in vault will be route53-access
    name: route53-access
    policyArns:
      - ${ARGOCD_ENV_ext_dns_cloud_policy}
---
#this is external secret object, we are using k8s auth with custom k8s engine/role to authenticate the dynamic secret generator
apiVersion: generators.external-secrets.io/v1alpha1
kind: VaultDynamicSecret
metadata:
  name: "cc-cloud-provider-dns-access"
  namespace: ${ARGOCD_ENV_dns_utils_namespace}
spec:
  path: "cc-aws/creds/route53-access"
  provider:
    server: "http://vault-active.${ARGOCD_ENV_vault_namespace}.svc.cluster.local:8200"
    auth:
      kubernetes:
        mountPath: "${ARGOCD_ENV_aws_dynamic_auth_path}"
        role: dns-dynamic-secret-vault
        serviceAccountRef:
          name: "aws-dynamic-secret-vault"
          namespace: ${ARGOCD_ENV_dns_utils_namespace}
        secretRef:
          name: "aws-dynamic-secret-vault-token"
          key: "token"
          namespace: ${ARGOCD_ENV_dns_utils_namespace}
---

