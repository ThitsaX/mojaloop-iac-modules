apiVersion: v1
kind: ServiceAccount
metadata:
  name: ext-secret-netbird
  namespace: ${ARGOCD_ENV_netbird_namespace}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: ${ARGOCD_ENV_netbird_namespace}
  name: eso-store-role
rules:
  - apiGroups: [“”]
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - authorization.k8s.io
    resources:
      - selfsubjectrulesreviews
    verbs:
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: eso-store-role-binding
  namespace: "${ARGOCD_ENV_netbird_namespace}"
subjects:
  - kind: ServiceAccount
    name: ext-secret-netbird
    namespace: "${ARGOCD_ENV_netbird_namespace}"
roleRef:
  kind: Role
  name: eso-store-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: k8s-store-netbird
spec:
  provider:
    kubernetes:
      # with this, the store is able to pull only from `default` namespace
      remoteNamespace: ${ARGOCD_ENV_netbird_namespace}
      auth:
        serviceAccount:
          name: "ext-secret-netbird"
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: netbird-ansible-secret-vars
  namespace: ${ARGOCD_ENV_netbird_namespace}
spec:
  refreshInterval: 1m

  secretStoreRef:
    kind: SecretStore
    name: k8s-store-netbird

  target:
    name: netbird-ansible-secret-vars
    creationPolicy: Owner
    template:
      type: Opaque
      engineVersion: v2
      data:
        inventory: |
          all:
            hosts:
             localhost:
               ansible_host: 127.0.0.1
            vars:
              api_user_client_id: {{ .netbird_api_admin_user_client_id  | toString }}
              api_user_client_secret: {{ .netbird_api_admin_user_client_id  | toString }}
              zitadel_netbird_project_id: {{ .netbird_project_id | toString }}
              netbird_url: https://netbird.${ARGOCD_ENV_netbird_dns_subdomain}
              zitadel_url: https://zitadel.${ARGOCD_ENV_netbird_dns_subdomain}
              cluster_gw_peer_group_name: ${ARGOCD_ENV_cluster_name}-gateways
              cluster_domain: ${ARGOCD_ENV_cluster_domain}
              cluster_network_cidr: ${ARGOCD_ENV_cluster_cidr}
              cluster_route_name: ${ARGOCD_ENV_cluster_name}-main
              cluster_external_access_peer_group_name: ${ARGOCD_ENV_rbac_user_group}
              cluster_admin_access_peer_group_name: ${ARGOCD_ENV_rbac_admin_group}
              jwt_groups_claim_name: ${ARGOCD_ENV_zitadel_grant_prefix}

  data:
    - secretKey: netbird_api_admin_user_client_id
      remoteRef:
        key: ${ARGOCD_ENV_netbird_preconfig_output_secret}
        property: netbird_api_admin_user_client_id
    - secretKey: netbird_api_admin_user_client_secret
      remoteRef:
        key: ${ARGOCD_ENV_netbird_preconfig_output_secret}
        property: netbird_api_admin_user_client_secret
    - secretKey: netbird_project_id
      remoteRef:
        key: ${ARGOCD_ENV_netbird_preconfig_output_secret}
        property: netbird_project_id
