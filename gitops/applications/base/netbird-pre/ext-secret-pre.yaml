apiVersion: v1
kind: ServiceAccount
metadata:
  name: ext-secret-netbird
  namespace: ${ARGOCD_ENV_netbird_namespace}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: ${ARGOCD_ENV_netbird_namespace}
  name: eso-store-role
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - authorization.k8s.io
    resources:
      - selfsubjectrulesreviews
    verbs:
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: eso-store-role-binding
  namespace: "${ARGOCD_ENV_netbird_namespace}"
subjects:
  - kind: ServiceAccount
    name: ext-secret-netbird
    namespace: "${ARGOCD_ENV_netbird_namespace}"
roleRef:
  kind: Role
  name: eso-store-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: viewer
  namespace: netbird
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - pods/logs
      - secrets
    verbs:
      - get
      - list
      - watch
---
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: netbird-secret-store
  namespace: ${ARGOCD_ENV_netbird_namespace}
spec:
  provider:
    kubernetes:
      auth:
        serviceAccount:
          name: "ext-secret-netbird"
      remoteNamespace: ${ARGOCD_ENV_netbird_namespace}
      server:
        caProvider:
          type: ConfigMap
          name: kube-root-ca.crt
          key: ca.crt
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: netbird-db-credentials
  namespace: ${ARGOCD_ENV_netbird_namespace}
spec:
  refreshInterval: 1m

  secretStoreRef:
    kind: SecretStore
    name: netbird-secret-store

  data:
    - secretKey: password
      remoteRef:
        key: ${ARGOCD_ENV_db_secret_name}
        property: password

  target:
    name: ${ARGOCD_ENV_netbird_dsn_secret_name}
    creationPolicy: Owner
    template:
      data:
        ${ARGOCD_ENV_netbird_dsn_secret_key}: "host=${ARGOCD_ENV_externalservice_name}.${ARGOCD_ENV_netbird_namespace}.svc.cluster.local user=${ARGOCD_ENV_db_username} password={{.password}} dbname=${ARGOCD_ENV_db_name} port=5432"
