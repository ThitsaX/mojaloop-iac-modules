apiVersion: v1
kind: ServiceAccount
metadata:
  name: ext-secret-sc
  namespace: rook-ceph-external
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: rook-ceph-external
  name: eso-store-role
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - authorization.k8s.io
    resources:
      - selfsubjectrulesreviews
    verbs:
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: eso-store-role-binding
  namespace: rook-ceph-external
subjects:
  - kind: ServiceAccount
    name: ext-secret-sc
    namespace: rook-ceph-external
roleRef:
  kind: Role
  name: eso-store-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: viewer
  namespace: rook-ceph-external
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - pods/logs
      - secrets
    verbs:
      - get
      - list
      - watch
---
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: sc-secret-store
  namespace: rook-ceph-external
spec:
  provider:
    kubernetes:
      auth:
        serviceAccount:
          name: "ext-secret-sc"
      remoteNamespace: sc-cluster
      server:
        caProvider:
          type: ConfigMap
          name: kube-root-ca.crt
          key: ca.crt
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: sc-kubeconfig
  namespace: rook-ceph-external
spec:
  refreshInterval: 1m
  secretStoreRef:
    kind: SecretStore
    name: sc-secret-store
  target:
    name: sc-kubeconfig
    creationPolicy: Owner
    template:
      data:
        config: "{{ .value }}"
  data:
    - secretKey: value
      remoteRef:
        key: sc-kubeconfig
        property: value