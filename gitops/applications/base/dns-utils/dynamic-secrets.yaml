#setup auth engine for dynamic secret generator using vault config op
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dns-dynamic-secret-vault
  namespace: ${ARGOCD_ENV_dns_utils_namespace}
---
apiVersion: v1
kind: Secret
metadata:
  name: dns-dynamic-secret-vault-token
  namespace: ${ARGOCD_ENV_dns_utils_namespace}
  annotations:
    kubernetes.io/service-account.name: dns-dynamic-secret-vault
type: kubernetes.io/service-account-token
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: dns-dynamic-secret-vault-tokenreview-binding
  namespace: ${ARGOCD_ENV_dns_utils_namespace}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
  - kind: ServiceAccount
    name: dns-dynamic-secret-vault
    namespace: ${ARGOCD_ENV_dns_utils_namespace}
---
apiVersion: redhatcop.redhat.io/v1alpha1
kind: KubernetesAuthEngineRole
metadata:
  name: dns-dynamic-secret-vault
spec:
  authentication:
    path: ${ARGOCD_ENV_vault_k8s_admin_auth_path}
    role: ${ARGOCD_ENV_vault_k8s_admin_role_name}
    serviceAccount:
      name: default
  path: ${ARGOCD_ENV_vault_k8s_admin_auth_path}
  tokenTTL: 3600
  policies:
    - cloudprovider-creds
  targetServiceAccounts:
    - dns-dynamic-secret-vault
  targetNamespaces:
    targetNamespaces:
      - ${ARGOCD_ENV_dns_utils_namespace}
---
apiVersion: redhatcop.redhat.io/v1alpha1
kind: Policy
metadata:
  name: cloudprovider-creds
spec:
  authentication:
    path: ${ARGOCD_ENV_vault_k8s_admin_auth_path}
    role: ${ARGOCD_ENV_vault_k8s_admin_role_name}
    serviceAccount:
      name: default
  policy: |
    # Configure sudo on cloud provider secrets
    path "/${ARGOCD_ENV_vault_k8s_admin_auth_path}/creds/*" {
      capabilities = ["create", "read", "update", "delete", "list", "sudo"]
    }
  type: acl
---
#create external secrets using vault dynamic sec generator
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: "${ARGOCD_ENV_external_dns_credentials_secret}"
  namespace: ${ARGOCD_ENV_dns_utils_namespace}
spec:
  refreshInterval: "768h"
  target:
    name: ${ARGOCD_ENV_external_dns_credentials_secret}
  dataFrom:
    - sourceRef:
        generatorRef:
          apiVersion: generators.external-secrets.io/v1alpha1
          kind: VaultDynamicSecret
          name: "cc-cloud-provider-dns-access"
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: "${ARGOCD_ENV_certmanager_credentials_secret}"
  namespace: ${ARGOCD_ENV_dns_utils_namespace}
spec:
  refreshInterval: "768h"
  target:
    name: ${ARGOCD_ENV_certmanager_credentials_secret}
  dataFrom:
    - sourceRef:
        generatorRef:
          apiVersion: generators.external-secrets.io/v1alpha1
          kind: VaultDynamicSecret
          name: "cc-cloud-provider-dns-access"
