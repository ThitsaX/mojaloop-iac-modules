---
#this is external secret object, we are using k8s auth with custom k8s engine/role to authenticate the dynamic secret generator
apiVersion: generators.external-secrets.io/v1alpha1
kind: VaultDynamicSecret
metadata:
  name: "cc-cloud-provider-external-dns"
  namespace: ${ARGOCD_ENV_external_dns_namespace}
spec:
  path: "cc-cloud-provider/creds/dns-access"
  provider:
    server: "http://vault-active.${ARGOCD_ENV_vault_namespace}.svc.cluster.local:8200"
    auth:
      kubernetes:
        mountPath: ${ARGOCD_ENV_vault_k8s_admin_auth_path}
        role: dns-dynamic-secret-vault
        serviceAccountRef:
          name: "dns-dynamic-secret-vault"
          namespace: ${ARGOCD_ENV_external_dns_namespace}
        secretRef:
          name: "dns-dynamic-secret-vault-token"
          key: "token"
          namespace: ${ARGOCD_ENV_external_dns_namespace}
---
apiVersion: generators.external-secrets.io/v1alpha1
kind: VaultDynamicSecret
metadata:
  name: "cc-cloud-provider-cert-manager"
  namespace: ${ARGOCD_ENV_cert_manager_namespace}
spec:
  path: "cc-cloud-provider/creds/dns-access"
  provider:
    server: "http://vault-active.${ARGOCD_ENV_vault_namespace}.svc.cluster.local:8200"
    auth:
      kubernetes:
        mountPath: ${ARGOCD_ENV_vault_k8s_admin_auth_path}
        role: dns-dynamic-secret-vault
        serviceAccountRef:
          name: "dns-dynamic-secret-vault"
          namespace: ${ARGOCD_ENV_cert_manager_namespace}
        secretRef:
          name: "dns-dynamic-secret-vault-token"
          key: "token"
          namespace: ${ARGOCD_ENV_cert_manager_namespace}
