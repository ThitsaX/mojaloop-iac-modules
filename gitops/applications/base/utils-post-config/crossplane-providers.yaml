apiVersion: pkg.crossplane.io/v1alpha1
kind: ControllerConfig
metadata:
  name: debug-config
spec:
  args:
    - --debug
---
apiVersion: pkg.crossplane.io/v1
kind: Provider
metadata:
  name: provider-terraform
spec:
  package: xpkg.upbound.io/upbound/provider-terraform:v${ARGOCD_ENV_terraform_crossplane_modules_version}
  controllerConfigRef:
    name: debug-config
  runtimeConfigRef:
    name: provider-terraform-config
---
apiVersion: pkg.crossplane.io/v1
kind: Provider
metadata:
  name: provider-vault
spec:
  package: xpkg.upbound.io/upbound/provider-vault:v${ARGOCD_ENV_vault_crossplane_modules_version}
  controllerConfigRef:
    name: debug-config
---
apiVersion: pkg.crossplane.io/v1
kind: Provider
metadata:
  name: provider-ansible
spec:
  package: xpkg.upbound.io/crossplane-contrib/provider-ansible:v${ARGOCD_ENV_ansible_crossplane_modules_version}
  controllerConfigRef:
    name: debug-config
  runtimeConfigRef:
    name: provider-ansible-config
---
apiVersion: pkg.crossplane.io/v1beta1
kind: DeploymentRuntimeConfig
metadata:
  name: provider-ansible-config
spec:
  deploymentTemplate:
    spec:
      selector: {}
      template:
        spec:
          containers:
            - name: package-runtime
              command:
                - /usr/bin/dumb-init
                - sh
                - -c
                - /usr/local/bin/pip install kubernetes && exec "$@"
                - --
                - crossplane-ansible-provider
---
apiVersion: pkg.crossplane.io/v1beta1
kind: DeploymentRuntimeConfig
metadata:
  name: provider-terraform-config
spec:
  deploymentTemplate:
    spec:
      selector: {}
      template:
        spec:
          volumes:
            - emptyDir: {}
              name: additional
          initContainers:
            - name: configure-zitadel-provider
              image: golang:1.20-alpine3.18
              securityContext:
                runAsUser: 0
                privileged: true
                runAsNonRoot: false
              command: [sh, -c]
              args:
                [
                  "apk add git && git clone https://github.com/mojaloop/terraform-provider-zitadel && cd terraform-provider-zitadel && git checkout feature/add-user-grant-datasource && go build . && cp terraform-provider-zitadel /tmp/config/ && chmod +rwx /tmp/config/terraform-provider-zitadel",
                ]
              volumeMounts:
                - mountPath: /tmp/config
                  name: additional
            - name: configure-netbird-provider
              image: golang:1.20-alpine3.18
              securityContext:
                runAsUser: 0
                privileged: true
                runAsNonRoot: false
              command: [sh, -c]
              args:
                [
                  "apk add git && git clone https://github.com/mojaloop/terraform-provider-netbird && cd terraform-provider-zitadel && git checkout dev && go build . && cp terraform-provider-netbird /tmp/config/ && chmod +rwx /tmp/config/terraform-provider-netbird",
                ]
              volumeMounts:
                - mountPath: /tmp/config
                  name: additional
          containers:
            - name: package-runtime
              volumeMounts:
                - mountPath: /tmp/config
                  name: additional
  serviceAccountTemplate:
    metadata:
      name: crossplane-terraform-sa
