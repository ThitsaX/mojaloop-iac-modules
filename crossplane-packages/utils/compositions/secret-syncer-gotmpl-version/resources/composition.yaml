apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: secretsyncergotmpl
  labels:
    crossplane.io/xrd: xsecretsyncergotmpl.infitx.org
spec:
  compositeTypeRef:
    apiVersion: infitx.org/v1alpha1
    kind: SecretSyncerGoTmpl
  mode: Pipeline
  pipeline:
    - step: render-templates
      functionRef:
        name: function-go-templating
      input:
        apiVersion: gotemplating.fn.crossplane.io/v1beta1
        kind: GoTemplate
        source: Inline
        inline:
          template: |-
            apiVersion: kubernetes.crossplane.io/v1alpha2
            kind: Object
            metadata:
              name: source-secret
              annotations:
                {{ setResourceNameAnnotation (print "source-secret") }}
            spec:
              forProvider:
                manifest:
                  apiVersion: v1
                  kind: Secret
                  metadata:
                    name: {{ .observed.composite.resource.spec.parameters.source.name }}
                    namespace: {{ .observed.composite.resource.spec.parameters.source.namespace }}
              managementPolicies:
                - Observe
              providerConfigRef:
                name: {{ .observed.composite.resource.spec.providerConfigsRef.sourceK8sProviderName }}
            ---

            {{ $sourceSecret := getComposedResource . "source-secret" }}
            {{ $sourceSecretData := get $sourceSecret.status.atProvider.manifest "data" }}
            {{ $sourceSecretType := get $sourceSecret.status.atProvider.manifest "type" }}

            apiVersion: kubernetes.crossplane.io/v1alpha2
            kind: Object
            metadata:
              name: destination-secret
              annotations:
                {{ setResourceNameAnnotation (print "destination-secret") }}
            spec:
              forProvider:
                manifest:
                  apiVersion: v1
                  kind: Secret
                  metadata:
                    name: {{ .observed.composite.resource.spec.parameters.destination.name }}
                    namespace: {{ .observed.composite.resource.spec.parameters.destination.namespace }}
                  data: {{ $sourceSecretData }}
                  type: {{ $sourceSecretType }}
              managementPolicies:
              {{- range $policy := .observed.composite.resource.spec.managementPolicies }}
                - "{{ $policy }}"
              {{- end }}
              providerConfigRef:
                name: {{ .observed.composite.resource.spec.providerConfigsRef.destinationK8sProviderName }}
